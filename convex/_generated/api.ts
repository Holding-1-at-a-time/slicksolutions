/* eslint-disable */
/**
 * Generated by Convex.
 *
 * This file is autogenerated and should not be edited directly.
 */
// Genenerated boilerplate
declare type FunctionReference<Mode extends "Query" | "Mutation", Args, Return> = {
  _args: Args
  _returnType: Return
}
declare type QueryReference<Args, Return> = FunctionReference<"Query", Args, Return>
declare type MutationReference<Args, Return> = FunctionReference<"Mutation", Args, Return>

import type * as aiInsights from "../aiInsights"
import type * as assessments from "../assessments"
import type * as users from "../users"
import type * as vectorSearch from "../vectorSearch"

/**
 * A utility for referencing Convex functions in your app.
 *
 * Usage:
 * \`\`\`js
 * const myFunction = useConvex(api.myFunctions.myQuery);
 * \`\`\`
 */
export declare const api: {
  aiInsights: {
    create: MutationReference<aiInsights.create["args"], aiInsights.create["_returnType"]>
    countByType: QueryReference<aiInsights.countByType["args"], aiInsights.countByType["_returnType"]>
    get: QueryReference<aiInsights.get["args"], aiInsights.get["_returnType"]>
    generateInsight: MutationReference<aiInsights.generateInsight["args"], aiInsights.generateInsight["_returnType"]>
    listByBusiness: QueryReference<aiInsights.listByBusiness["args"], aiInsights.listByBusiness["_returnType"]>
    remove: MutationReference<aiInsights.remove["args"], aiInsights.remove["_returnType"]>
  }
  assessments: {
    create: MutationReference<assessments.create["args"], assessments.create["_returnType"]>
    update: MutationReference<assessments.update["args"], assessments.update["_returnType"]>
  }
  users: {
    getByClerkId: QueryReference<users.getByClerkId["args"], users.getByClerkId["_returnType"]>
  }
  vectorSearch: {
    similarAssessments: QueryReference<
      vectorSearch.similarAssessments["args"],
      vectorSearch.similarAssessments["_returnType"]
    >
    similarServices: QueryReference<vectorSearch.similarServices["args"], vectorSearch.similarServices["_returnType"]>
    similarVehicles: QueryReference<vectorSearch.similarVehicles["args"], vectorSearch.similarVehicles["_returnType"]>
  }
}

